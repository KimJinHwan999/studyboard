package com.example.board.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.example.board.dto.BoardDTO;
import com.example.board.dto.MemberDTO;
import com.example.board.mapper.BoardMapper;
import com.example.board.service.BoardService;
import com.example.board.service.HchartService;
import com.example.board.service.PagingService;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class HomeController {

	private final BoardService boardService;
	private final PagingService pagingService;
	private final HchartService hchartService;
	private final BoardMapper boardMapper;

	/*
	 * @GetMapping("/") public String home(HttpSession session, HttpServletResponse
	 * response, Model model) { int pgNum = 1;
	 * 
	 * // 세션에 저장된 회원정보 불러오기 MemberDTO sessionMember =
	 * (MemberDTO)session.getAttribute("loginUserSession");
	 * 
	 * 페이징 로직 Map<String, Object> page = (HashMap<String, Object>)
	 * pagingService.pagingLogic(pgNum);
	 * 
	 * 하이차트 JsonObject chartJson = (JsonObject) hchartService.chartJson();
	 * 
	 * model.addAttribute("loginMember", sessionMember); model.addAttribute("page",
	 * page); model.addAttribute("chartJson", chartJson);
	 * 
	 * return "index/index";
	 * 
	 * }
	 */

	@GetMapping("/{pgNum_}")
	public String homePaging(@PathVariable("pgNum_") Integer pgNum_, HttpSession session, HttpServletResponse response,
			Model model) {

		if(pgNum_ == null) {
			pgNum_ = 1;
		}
		
		int pgNum = pgNum_.intValue();
		// 세션에 저장된 회원정보 불러오기
		MemberDTO sessionMember = (MemberDTO) session.getAttribute("loginUserSession");

		/* 페이징 로직 */
		Map<String, Object> page = (HashMap<String, Object>) pagingService.pagingLogic(pgNum);

		/* 하이차트 */
		JsonObject chartJson = (JsonObject) hchartService.chartJson();

		model.addAttribute("loginMember", sessionMember);
		model.addAttribute("page", page);
		model.addAttribute("chartJson", chartJson);

		return "index/index";

	}
}
